import telebot
from telebot import types

bot = telebot.TeleBot('6469384473:AAGHd-SwNvBqOoUmUhVlKOAyBThai7-lgSA')

user_language = {}
user_data = {}

# States
STATE_SELECT_LANGUAGE = "select_language"
STATE_ENTER_NAME = "enter_name"
STATE_ENTER_PHONE = 3


@bot.message_handler(commands=['start'])
def start(message):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row('English', '–†—É—Å—Å–∫–∏–π', 'O\'zbek')
    bot.send_message(message.chat.id, "Choose your language / –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Tilni tanlang:", reply_markup=markup)

    user_data[message.chat.id] = {'state': STATE_ENTER_NAME}


@bot.message_handler(func=lambda message: message.text in ['English', '–†—É—Å—Å–∫–∏–π', 'O\'zbek'])
def set_language(message):
    selected_language = message.text.lower()
    user_data[message.chat.id] = {'language': selected_language}

    if message.text == 'English':
        bot.send_message(message.chat.id, f"Language set to {selected_language.lower()}.")
        bot.send_message(message.chat.id, "Please enter your first and lastname:")
        user_data[message.chat.id]['state'] = STATE_ENTER_NAME
    if message.text == '–†—É—Å—Å–∫–∏–π':
        bot.send_message(message.chat.id, f"–í—ã –≤—ã–±—Ä–∞–ª–∏ {selected_language.lower()} —è–∑—ã–∫.")
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é:")
        user_data[message.chat.id]['state'] = STATE_ENTER_NAME
    elif message.text == 'O\'zbek':
        bot.send_message(message.chat.id, f"Siz {selected_language.lower()} tilini tanladingiz.")
        bot.send_message(message.chat.id, "Iltimos ism familiyangizni kiriting:")
        user_data[message.chat.id]['state'] = STATE_ENTER_NAME


@bot.message_handler(func=lambda message: user_data[message.chat.id]['state'] == STATE_ENTER_NAME)
def process_name(message):
    name = message.text.strip()
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    request_contact_button = types.KeyboardButton(text="üì≤ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)
    keyboard.add(request_contact_button)
    bot.send_message(message.chat.id, f"–í–µ–ª–∏–∫–æ–ª–µ–ø–Ω–æ {name}")
    bot.send_message(message.chat.id, f"–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:",
                     reply_markup=keyboard)


@bot.message_handler(content_types=['contact'])
def handle_contact(message):
    if message.contact is not None:
        phone = message.contact.phone_number
        bot.send_message(message.chat.id, f"–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ {phone} –±—ã–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω.")
        bot.send_message(message.chat.id, "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –≤ –±–æ—Ç–µ, –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ /continue")
        user_data[message.chat.id]['state'] = None
        user_data[message.chat.id]['name'] = None


@bot.message_handler(commands=['continue'])
def continue_bot(message):
    website_link = "https://example.com"
    keyboard = types.InlineKeyboardMarkup()
    my_profile_button = types.InlineKeyboardButton(text="üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å", callback_data="my_profile")
    support_button = types.InlineKeyboardButton(text="üßØ –°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏", callback_data="support")
    rules_button = types.InlineKeyboardButton(text="üìñ –ü—Ä–∞–≤–∏–ª–∞", callback_data="rules")
    share_button = types.InlineKeyboardButton(text="üî∫ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è", switch_inline_query="")

    keyboard.add(my_profile_button, support_button, rules_button, share_button)

    bot.send_message(message.chat.id,
                     f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞ <a href='{website_link}'>Online_Store.uz</a>",
                     parse_mode="html", reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: call.data == "my_profile")
def my_profile_callback(call):
    user = call.from_user
    user_id = user.id
    user_name = user.first_name

    if user.username:
        user_username = f"@{user.username}"
    else:
        user_username = "–ù–µ—Ç username"

    profile_info = f"–ò–º—è: {user_name}\nID: {user_id}\nUsername: {user_username}"

    bot.send_message(user_id, "–≠—Ç–æ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å!\n" + profile_info)


@bot.callback_query_handler(func=lambda call: call.data == "back")
def back_callback(call):
    user_id = call.from_user.id


@bot.callback_query_handler(func=lambda call: call.data == "rules")
def support_c(call):

    bot.send_message(call.message.chat.id, "–£–≤–∞–∂–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–æ–±–ª—é–¥–∞–π—Ç–µ —É–≤–∞–∂–µ–Ω–∏–µ –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º. –ò–∑–±–µ–≥–∞–π—Ç–µ –æ—Å–∫–æ—Ä–±–∏—Ç–µ–ª—å–Ω—ã—Ö, –Ω–µ–ø—Ä–∏—Å—Ç–æ–π–Ω—ã—Ö –∏–ª–∏ –¥–∏—Å–∫—Ä–∏–º–∏–Ω–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.–ß–µ—Ç–∫–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å: –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞ –∏ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∏—Ö —á–µ—Ç–∫–æ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ. –ù–µ –¥–∞–≤–∞–π—Ç–µ –±–æ—Ç—É –∏–∑–ª–∏—à–Ω—é—é —Å–ª–æ–∂–Ω–æ—Å—Ç—å, —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Ç–µ—Å—å –Ω–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∑–∞–¥–∞—á–∞—Ö.–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö: –ó–∞—â–∏—â–∞–π—Ç–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ù–µ —Ö—Ä–∞–Ω–∏—Ç–µ –∏–ª–∏ –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ –ª–∏—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –±–µ–∑ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.–ù–µ —Å–ø–∞–º–∏—Ç—å: –ù–µ –ø–æ—Å—ã–ª–∞–π—Ç–µ –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∏ –Ω–µ —Ä–µ–∫–ª–∞–º–∏—Ä—É–π—Ç–µ –Ω–∏—á–µ–≥–æ, —á—Ç–æ –Ω–µ —Å–≤—è–∑–∞–Ω–æ —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é –±–æ—Ç–∞.–û—Ç–≤–µ—Ç—ã –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: –°–¥–µ–ª–∞–π—Ç–µ –±–æ—Ç–∞ –æ—Ç–∑—ã–≤—á–∏–≤—ã–º –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –∫–æ—Ç–æ—Ä—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞—é—Ç.")


@bot.callback_query_handler(func=lambda call: call.data == "support")
def support_c(call):
    telegram_link = "https://t.me/abbos010101"

    bot.send_message(call.message.chat.id, f"<a href='{telegram_link}'>–ß–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏</a>",
                     parse_mode="html")


@bot.message_handler()
def get_user_text(message):
    bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É ‚ò∫Ô∏è', parse_mode='html')


bot.polling(none_stop=True)







